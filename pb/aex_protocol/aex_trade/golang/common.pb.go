// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package Trade

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//事件
type EVEN int32

const (
	EVEN_Kong   EVEN = 0
	EVEN_Trade  EVEN = 1
	EVEN_Kline  EVEN = 2
	EVEN_Depth  EVEN = 3
	EVEN_Ticker EVEN = 4
	EVEN_Five   EVEN = 5
	EVEN_ULogin EVEN = 99
	EVEN_UOrder EVEN = 100
	EVEN_UTrade EVEN = 101
)

var EVEN_name = map[int32]string{
	0:   "Kong",
	1:   "Trade",
	2:   "Kline",
	3:   "Depth",
	4:   "Ticker",
	5:   "Five",
	99:  "ULogin",
	100: "UOrder",
	101: "UTrade",
}

var EVEN_value = map[string]int32{
	"Kong":   0,
	"Trade":  1,
	"Kline":  2,
	"Depth":  3,
	"Ticker": 4,
	"Five":   5,
	"ULogin": 99,
	"UOrder": 100,
	"UTrade": 101,
}

func (x EVEN) String() string {
	return proto.EnumName(EVEN_name, int32(x))
}

func (EVEN) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

type KlineT int32

const (
	KlineT_Min1  KlineT = 0
	KlineT_Min5  KlineT = 1
	KlineT_Min15 KlineT = 2
	KlineT_Min30 KlineT = 3
	KlineT_Hour1 KlineT = 4
	KlineT_Hour4 KlineT = 5
	KlineT_Day1  KlineT = 6
	KlineT_Day5  KlineT = 7
	KlineT_Week1 KlineT = 8
	KlineT_Mon1  KlineT = 9
)

var KlineT_name = map[int32]string{
	0: "Min1",
	1: "Min5",
	2: "Min15",
	3: "Min30",
	4: "Hour1",
	5: "Hour4",
	6: "Day1",
	7: "Day5",
	8: "Week1",
	9: "Mon1",
}

var KlineT_value = map[string]int32{
	"Min1":  0,
	"Min5":  1,
	"Min15": 2,
	"Min30": 3,
	"Hour1": 4,
	"Hour4": 5,
	"Day1":  6,
	"Day5":  7,
	"Week1": 8,
	"Mon1":  9,
}

func (x KlineT) String() string {
	return proto.EnumName(KlineT_name, int32(x))
}

func (KlineT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

//K线（API）
type KlineList struct {
	Kline                []*KlineBasicInfo `protobuf:"bytes,1,rep,name=Kline,proto3" json:"Kline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *KlineList) Reset()         { *m = KlineList{} }
func (m *KlineList) String() string { return proto.CompactTextString(m) }
func (*KlineList) ProtoMessage()    {}
func (*KlineList) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *KlineList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KlineList.Unmarshal(m, b)
}
func (m *KlineList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KlineList.Marshal(b, m, deterministic)
}
func (m *KlineList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KlineList.Merge(m, src)
}
func (m *KlineList) XXX_Size() int {
	return xxx_messageInfo_KlineList.Size(m)
}
func (m *KlineList) XXX_DiscardUnknown() {
	xxx_messageInfo_KlineList.DiscardUnknown(m)
}

var xxx_messageInfo_KlineList proto.InternalMessageInfo

func (m *KlineList) GetKline() []*KlineBasicInfo {
	if m != nil {
		return m.Kline
	}
	return nil
}

//深度（API）
type DepthList struct {
	// @inject_tag: json:"bids"
	Buy []*DepthBasicInfo `protobuf:"bytes,2,rep,name=Buy,proto3" json:"Buy,omitempty"`
	// @inject_tag: json:"asks"
	Sell                 []*DepthBasicInfo `protobuf:"bytes,3,rep,name=Sell,proto3" json:"Sell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DepthList) Reset()         { *m = DepthList{} }
func (m *DepthList) String() string { return proto.CompactTextString(m) }
func (*DepthList) ProtoMessage()    {}
func (*DepthList) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *DepthList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepthList.Unmarshal(m, b)
}
func (m *DepthList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepthList.Marshal(b, m, deterministic)
}
func (m *DepthList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepthList.Merge(m, src)
}
func (m *DepthList) XXX_Size() int {
	return xxx_messageInfo_DepthList.Size(m)
}
func (m *DepthList) XXX_DiscardUnknown() {
	xxx_messageInfo_DepthList.DiscardUnknown(m)
}

var xxx_messageInfo_DepthList proto.InternalMessageInfo

func (m *DepthList) GetBuy() []*DepthBasicInfo {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *DepthList) GetSell() []*DepthBasicInfo {
	if m != nil {
		return m.Sell
	}
	return nil
}

//单交易对行情（API）
type TickerData struct {
	Price                string   `protobuf:"bytes,2,opt,name=Price,proto3" json:"Price,omitempty"`
	High                 string   `protobuf:"bytes,4,opt,name=High,proto3" json:"High,omitempty"`
	Low                  string   `protobuf:"bytes,5,opt,name=Low,proto3" json:"Low,omitempty"`
	Amount               string   `protobuf:"bytes,6,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Money                string   `protobuf:"bytes,7,opt,name=Money,proto3" json:"Money,omitempty"`
	Range                string   `protobuf:"bytes,8,opt,name=Range,proto3" json:"Range,omitempty"`
	Buy                  string   `protobuf:"bytes,9,opt,name=Buy,proto3" json:"Buy,omitempty"`
	Sell                 string   `protobuf:"bytes,10,opt,name=Sell,proto3" json:"Sell,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TickerData) Reset()         { *m = TickerData{} }
func (m *TickerData) String() string { return proto.CompactTextString(m) }
func (*TickerData) ProtoMessage()    {}
func (*TickerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

func (m *TickerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TickerData.Unmarshal(m, b)
}
func (m *TickerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TickerData.Marshal(b, m, deterministic)
}
func (m *TickerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TickerData.Merge(m, src)
}
func (m *TickerData) XXX_Size() int {
	return xxx_messageInfo_TickerData.Size(m)
}
func (m *TickerData) XXX_DiscardUnknown() {
	xxx_messageInfo_TickerData.DiscardUnknown(m)
}

var xxx_messageInfo_TickerData proto.InternalMessageInfo

func (m *TickerData) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *TickerData) GetHigh() string {
	if m != nil {
		return m.High
	}
	return ""
}

func (m *TickerData) GetLow() string {
	if m != nil {
		return m.Low
	}
	return ""
}

func (m *TickerData) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *TickerData) GetMoney() string {
	if m != nil {
		return m.Money
	}
	return ""
}

func (m *TickerData) GetRange() string {
	if m != nil {
		return m.Range
	}
	return ""
}

func (m *TickerData) GetBuy() string {
	if m != nil {
		return m.Buy
	}
	return ""
}

func (m *TickerData) GetSell() string {
	if m != nil {
		return m.Sell
	}
	return ""
}

//深度单元信息
type DepthBasicInfo struct {
	// @inject_tag: json:"a"
	Amount string `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	//@inject_tag: json:"p"
	Price                string   `protobuf:"bytes,3,opt,name=Price,proto3" json:"Price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepthBasicInfo) Reset()         { *m = DepthBasicInfo{} }
func (m *DepthBasicInfo) String() string { return proto.CompactTextString(m) }
func (*DepthBasicInfo) ProtoMessage()    {}
func (*DepthBasicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{3}
}

func (m *DepthBasicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepthBasicInfo.Unmarshal(m, b)
}
func (m *DepthBasicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepthBasicInfo.Marshal(b, m, deterministic)
}
func (m *DepthBasicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepthBasicInfo.Merge(m, src)
}
func (m *DepthBasicInfo) XXX_Size() int {
	return xxx_messageInfo_DepthBasicInfo.Size(m)
}
func (m *DepthBasicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DepthBasicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DepthBasicInfo proto.InternalMessageInfo

func (m *DepthBasicInfo) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *DepthBasicInfo) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

//交易单元信息
type TradeBasicInfo struct {
	TimeUnix             int64    `protobuf:"varint,1,opt,name=TimeUnix,proto3" json:"TimeUnix,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Price                string   `protobuf:"bytes,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	TradeId              int64    `protobuf:"varint,5,opt,name=TradeId,proto3" json:"TradeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeBasicInfo) Reset()         { *m = TradeBasicInfo{} }
func (m *TradeBasicInfo) String() string { return proto.CompactTextString(m) }
func (*TradeBasicInfo) ProtoMessage()    {}
func (*TradeBasicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{4}
}

func (m *TradeBasicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeBasicInfo.Unmarshal(m, b)
}
func (m *TradeBasicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeBasicInfo.Marshal(b, m, deterministic)
}
func (m *TradeBasicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeBasicInfo.Merge(m, src)
}
func (m *TradeBasicInfo) XXX_Size() int {
	return xxx_messageInfo_TradeBasicInfo.Size(m)
}
func (m *TradeBasicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeBasicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TradeBasicInfo proto.InternalMessageInfo

func (m *TradeBasicInfo) GetTimeUnix() int64 {
	if m != nil {
		return m.TimeUnix
	}
	return 0
}

func (m *TradeBasicInfo) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *TradeBasicInfo) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *TradeBasicInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TradeBasicInfo) GetTradeId() int64 {
	if m != nil {
		return m.TradeId
	}
	return 0
}

//K线基本信息
type KlineBasicInfo struct {
	T                    string   `protobuf:"bytes,2,opt,name=T,proto3" json:"T,omitempty"`
	TimeUnix             int64    `protobuf:"varint,3,opt,name=TimeUnix,proto3" json:"TimeUnix,omitempty"`
	Amount               string   `protobuf:"bytes,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Open                 string   `protobuf:"bytes,5,opt,name=Open,proto3" json:"Open,omitempty"`
	High                 string   `protobuf:"bytes,6,opt,name=High,proto3" json:"High,omitempty"`
	Low                  string   `protobuf:"bytes,7,opt,name=Low,proto3" json:"Low,omitempty"`
	Close                string   `protobuf:"bytes,8,opt,name=Close,proto3" json:"Close,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KlineBasicInfo) Reset()         { *m = KlineBasicInfo{} }
func (m *KlineBasicInfo) String() string { return proto.CompactTextString(m) }
func (*KlineBasicInfo) ProtoMessage()    {}
func (*KlineBasicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{5}
}

func (m *KlineBasicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KlineBasicInfo.Unmarshal(m, b)
}
func (m *KlineBasicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KlineBasicInfo.Marshal(b, m, deterministic)
}
func (m *KlineBasicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KlineBasicInfo.Merge(m, src)
}
func (m *KlineBasicInfo) XXX_Size() int {
	return xxx_messageInfo_KlineBasicInfo.Size(m)
}
func (m *KlineBasicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_KlineBasicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_KlineBasicInfo proto.InternalMessageInfo

func (m *KlineBasicInfo) GetT() string {
	if m != nil {
		return m.T
	}
	return ""
}

func (m *KlineBasicInfo) GetTimeUnix() int64 {
	if m != nil {
		return m.TimeUnix
	}
	return 0
}

func (m *KlineBasicInfo) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *KlineBasicInfo) GetOpen() string {
	if m != nil {
		return m.Open
	}
	return ""
}

func (m *KlineBasicInfo) GetHigh() string {
	if m != nil {
		return m.High
	}
	return ""
}

func (m *KlineBasicInfo) GetLow() string {
	if m != nil {
		return m.Low
	}
	return ""
}

func (m *KlineBasicInfo) GetClose() string {
	if m != nil {
		return m.Close
	}
	return ""
}

//用户订单信息（API）
type OrderInfoUser struct {
	TabId                string   `protobuf:"bytes,2,opt,name=TabId,proto3" json:"TabId,omitempty"`
	UserId               string   `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Side                 int32    `protobuf:"varint,4,opt,name=Side,proto3" json:"Side,omitempty"`
	Amount               string   `protobuf:"bytes,7,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Price                string   `protobuf:"bytes,8,opt,name=Price,proto3" json:"Price,omitempty"`
	Surplus              string   `protobuf:"bytes,9,opt,name=Surplus,proto3" json:"Surplus,omitempty"`
	Status               int32    `protobuf:"varint,10,opt,name=Status,proto3" json:"Status,omitempty"`
	TimeUnix             int64    `protobuf:"varint,11,opt,name=TimeUnix,proto3" json:"TimeUnix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderInfoUser) Reset()         { *m = OrderInfoUser{} }
func (m *OrderInfoUser) String() string { return proto.CompactTextString(m) }
func (*OrderInfoUser) ProtoMessage()    {}
func (*OrderInfoUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{6}
}

func (m *OrderInfoUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderInfoUser.Unmarshal(m, b)
}
func (m *OrderInfoUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderInfoUser.Marshal(b, m, deterministic)
}
func (m *OrderInfoUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderInfoUser.Merge(m, src)
}
func (m *OrderInfoUser) XXX_Size() int {
	return xxx_messageInfo_OrderInfoUser.Size(m)
}
func (m *OrderInfoUser) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderInfoUser.DiscardUnknown(m)
}

var xxx_messageInfo_OrderInfoUser proto.InternalMessageInfo

func (m *OrderInfoUser) GetTabId() string {
	if m != nil {
		return m.TabId
	}
	return ""
}

func (m *OrderInfoUser) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *OrderInfoUser) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *OrderInfoUser) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *OrderInfoUser) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *OrderInfoUser) GetSurplus() string {
	if m != nil {
		return m.Surplus
	}
	return ""
}

func (m *OrderInfoUser) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OrderInfoUser) GetTimeUnix() int64 {
	if m != nil {
		return m.TimeUnix
	}
	return 0
}

//用户交易单元信息
type TradeBasicInfoUser struct {
	TabId                string          `protobuf:"bytes,2,opt,name=TabId,proto3" json:"TabId,omitempty"`
	UserId               string          `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Match                int32           `protobuf:"varint,4,opt,name=Match,proto3" json:"Match,omitempty"`
	Trade                *TradeBasicInfo `protobuf:"bytes,5,opt,name=Trade,proto3" json:"Trade,omitempty"`
	Fee                  string          `protobuf:"bytes,6,opt,name=Fee,proto3" json:"Fee,omitempty"`
	FeeCoin              string          `protobuf:"bytes,7,opt,name=FeeCoin,proto3" json:"FeeCoin,omitempty"`
	ExecType             int32           `protobuf:"varint,8,opt,name=ExecType,proto3" json:"ExecType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradeBasicInfoUser) Reset()         { *m = TradeBasicInfoUser{} }
func (m *TradeBasicInfoUser) String() string { return proto.CompactTextString(m) }
func (*TradeBasicInfoUser) ProtoMessage()    {}
func (*TradeBasicInfoUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{7}
}

func (m *TradeBasicInfoUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeBasicInfoUser.Unmarshal(m, b)
}
func (m *TradeBasicInfoUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeBasicInfoUser.Marshal(b, m, deterministic)
}
func (m *TradeBasicInfoUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeBasicInfoUser.Merge(m, src)
}
func (m *TradeBasicInfoUser) XXX_Size() int {
	return xxx_messageInfo_TradeBasicInfoUser.Size(m)
}
func (m *TradeBasicInfoUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeBasicInfoUser.DiscardUnknown(m)
}

var xxx_messageInfo_TradeBasicInfoUser proto.InternalMessageInfo

func (m *TradeBasicInfoUser) GetTabId() string {
	if m != nil {
		return m.TabId
	}
	return ""
}

func (m *TradeBasicInfoUser) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TradeBasicInfoUser) GetMatch() int32 {
	if m != nil {
		return m.Match
	}
	return 0
}

func (m *TradeBasicInfoUser) GetTrade() *TradeBasicInfo {
	if m != nil {
		return m.Trade
	}
	return nil
}

func (m *TradeBasicInfoUser) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

func (m *TradeBasicInfoUser) GetFeeCoin() string {
	if m != nil {
		return m.FeeCoin
	}
	return ""
}

func (m *TradeBasicInfoUser) GetExecType() int32 {
	if m != nil {
		return m.ExecType
	}
	return 0
}

//5%深度
type FiveDepth struct {
	Five                 string   `protobuf:"bytes,1,opt,name=Five,proto3" json:"Five,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FiveDepth) Reset()         { *m = FiveDepth{} }
func (m *FiveDepth) String() string { return proto.CompactTextString(m) }
func (*FiveDepth) ProtoMessage()    {}
func (*FiveDepth) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{8}
}

func (m *FiveDepth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FiveDepth.Unmarshal(m, b)
}
func (m *FiveDepth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FiveDepth.Marshal(b, m, deterministic)
}
func (m *FiveDepth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FiveDepth.Merge(m, src)
}
func (m *FiveDepth) XXX_Size() int {
	return xxx_messageInfo_FiveDepth.Size(m)
}
func (m *FiveDepth) XXX_DiscardUnknown() {
	xxx_messageInfo_FiveDepth.DiscardUnknown(m)
}

var xxx_messageInfo_FiveDepth proto.InternalMessageInfo

func (m *FiveDepth) GetFive() string {
	if m != nil {
		return m.Five
	}
	return ""
}

func init() {
	proto.RegisterEnum("Trade.EVEN", EVEN_name, EVEN_value)
	proto.RegisterEnum("Trade.KlineT", KlineT_name, KlineT_value)
	proto.RegisterType((*KlineList)(nil), "Trade.KlineList")
	proto.RegisterType((*DepthList)(nil), "Trade.DepthList")
	proto.RegisterType((*TickerData)(nil), "Trade.TickerData")
	proto.RegisterType((*DepthBasicInfo)(nil), "Trade.DepthBasicInfo")
	proto.RegisterType((*TradeBasicInfo)(nil), "Trade.TradeBasicInfo")
	proto.RegisterType((*KlineBasicInfo)(nil), "Trade.KlineBasicInfo")
	proto.RegisterType((*OrderInfoUser)(nil), "Trade.OrderInfoUser")
	proto.RegisterType((*TradeBasicInfoUser)(nil), "Trade.TradeBasicInfoUser")
	proto.RegisterType((*FiveDepth)(nil), "Trade.FiveDepth")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0xae, 0xe3, 0x43, 0xe2, 0x69, 0xff, 0x6a, 0xb5, 0xea, 0x8f, 0x56, 0xdc, 0x50, 0xf9, 0x86,
	0x52, 0xa4, 0x8a, 0x50, 0x2a, 0x71, 0x85, 0x44, 0x4f, 0x6a, 0xd4, 0x96, 0x22, 0xd7, 0x85, 0x4b,
	0xe4, 0xda, 0x4b, 0xba, 0x6a, 0xb2, 0x1b, 0x1c, 0x07, 0x9a, 0x37, 0xe0, 0x39, 0x78, 0x04, 0xde,
	0x83, 0x77, 0x42, 0x33, 0xbb, 0x39, 0x98, 0x93, 0x04, 0x77, 0xdf, 0x37, 0xde, 0xfd, 0x66, 0xe6,
	0x9b, 0x59, 0xc3, 0x5a, 0x61, 0x86, 0x43, 0xa3, 0x77, 0x46, 0x95, 0xa9, 0x0d, 0x0f, 0xb3, 0x2a,
	0x2f, 0x65, 0xf2, 0x1c, 0xe2, 0xd3, 0x81, 0xd2, 0xf2, 0x4c, 0x8d, 0x6b, 0xfe, 0x18, 0x42, 0x22,
	0xc2, 0xdb, 0xf4, 0xb7, 0x56, 0x9f, 0xfe, 0xbf, 0x43, 0x67, 0x76, 0x28, 0xb6, 0x9f, 0x8f, 0x55,
	0xd1, 0xd3, 0xef, 0x4d, 0x6a, 0xcf, 0x24, 0xef, 0x20, 0x3e, 0x94, 0xa3, 0xfa, 0x86, 0x6e, 0x3e,
	0x04, 0x7f, 0x7f, 0x32, 0x15, 0xad, 0xc6, 0x3d, 0xfa, 0xbc, 0xb8, 0x87, 0x27, 0xf8, 0x23, 0x08,
	0x2e, 0xe5, 0x60, 0x20, 0xfc, 0x3f, 0x9d, 0xa4, 0x23, 0xc9, 0x57, 0x0f, 0x20, 0x53, 0xc5, 0xad,
	0xac, 0x0e, 0xf3, 0x3a, 0xe7, 0x1b, 0x10, 0xbe, 0xae, 0x54, 0x21, 0x45, 0x6b, 0xd3, 0xdb, 0x8a,
	0x53, 0x4b, 0x38, 0x87, 0xe0, 0x44, 0xf5, 0x6f, 0x44, 0x40, 0x41, 0xc2, 0x9c, 0x81, 0x7f, 0x66,
	0x3e, 0x89, 0x90, 0x42, 0x08, 0xf9, 0x3d, 0x88, 0x5e, 0x0e, 0xcd, 0x44, 0xd7, 0x22, 0xa2, 0xa0,
	0x63, 0xa8, 0x79, 0x6e, 0xb4, 0x9c, 0x8a, 0xb6, 0xd5, 0x24, 0x82, 0xd1, 0x34, 0xd7, 0x7d, 0x29,
	0x3a, 0x36, 0x4a, 0x04, 0x55, 0xb1, 0xc5, 0xd8, 0xaa, 0x62, 0x2f, 0xdc, 0xf5, 0x02, 0x36, 0x37,
	0x15, 0xfd, 0x02, 0xd6, 0x9b, 0xcd, 0x2c, 0xe5, 0x6e, 0xfd, 0x98, 0xdb, 0xf6, 0xe3, 0x2f, 0xf5,
	0x93, 0x7c, 0xf6, 0x60, 0x9d, 0x3c, 0x59, 0x08, 0xdc, 0x87, 0x4e, 0xa6, 0x86, 0xf2, 0x4a, 0xab,
	0x3b, 0xe1, 0x6d, 0x7a, 0x5b, 0x7e, 0x3a, 0xe7, 0x7f, 0x27, 0x8e, 0x05, 0x67, 0xd3, 0x91, 0x9c,
	0x99, 0x85, 0x98, 0x0b, 0x68, 0x53, 0xbe, 0x5e, 0x49, 0x86, 0xf9, 0xe9, 0x8c, 0x26, 0x5f, 0x3c,
	0x58, 0x6f, 0x8e, 0x9e, 0xaf, 0x81, 0x97, 0xb9, 0x4c, 0x5e, 0xd6, 0x28, 0xcc, 0xff, 0x6d, 0x61,
	0x41, 0xa3, 0x30, 0x0e, 0xc1, 0xc5, 0x48, 0x6a, 0x37, 0x1c, 0xc2, 0xf3, 0x19, 0x46, 0x3f, 0xcf,
	0xb0, 0xbd, 0x98, 0xe1, 0x06, 0x84, 0x07, 0x03, 0x33, 0x9e, 0x4f, 0x85, 0x48, 0xf2, 0xcd, 0x83,
	0xff, 0x2e, 0xaa, 0x52, 0x56, 0x58, 0xdf, 0xd5, 0x58, 0x56, 0x78, 0x2e, 0xcb, 0xaf, 0x7b, 0xe5,
	0x6c, 0x4f, 0x88, 0x60, 0x3d, 0xf8, 0xb5, 0x57, 0x3a, 0x47, 0x1c, 0xa3, 0x19, 0xaa, 0xd2, 0x5a,
	0x12, 0xa6, 0x84, 0x97, 0x6a, 0x6f, 0xff, 0xda, 0xd4, 0xce, 0xb2, 0xa9, 0x02, 0xda, 0x97, 0x93,
	0x6a, 0x34, 0x98, 0x8c, 0xdd, 0x6e, 0xcc, 0x28, 0xea, 0x5c, 0xd6, 0x79, 0x3d, 0x19, 0xd3, 0x86,
	0x84, 0xa9, 0x63, 0x0d, 0xdf, 0x56, 0x9b, 0xbe, 0x61, 0x3f, 0xbc, 0x39, 0xff, 0x7f, 0x68, 0x0a,
	0xd7, 0x3a, 0xaf, 0x8b, 0x1b, 0xd7, 0x95, 0x25, 0xf8, 0xba, 0x49, 0x99, 0xbc, 0x5f, 0xbc, 0xbd,
	0x66, 0xb6, 0xd4, 0x9e, 0x41, 0xff, 0x8f, 0xa5, 0x74, 0x23, 0x41, 0x88, 0x7d, 0x1e, 0x4b, 0x79,
	0x60, 0x94, 0x76, 0xb6, 0xcc, 0x28, 0xf6, 0x73, 0x74, 0x27, 0x0b, 0x5a, 0xad, 0x0e, 0x65, 0x9c,
	0xf3, 0xe4, 0x01, 0xc4, 0xc7, 0xea, 0xa3, 0xa4, 0x37, 0x81, 0x66, 0x23, 0xa1, 0x2d, 0x8e, 0x53,
	0xc2, 0xdb, 0xb7, 0x10, 0x1c, 0xbd, 0x39, 0x7a, 0xc5, 0x3b, 0x10, 0x9c, 0x1a, 0xdd, 0x67, 0x2b,
	0x3c, 0x76, 0x75, 0x32, 0x0f, 0x21, 0x6d, 0x20, 0x6b, 0x21, 0x24, 0x11, 0xe6, 0x73, 0x80, 0xc8,
	0xfe, 0x17, 0x58, 0x80, 0xd7, 0x50, 0x86, 0x85, 0x18, 0xbd, 0x3a, 0x33, 0x7d, 0xa5, 0x59, 0x41,
	0x98, 0xb6, 0x82, 0x95, 0x84, 0xad, 0x9e, 0xdc, 0xfe, 0x00, 0x11, 0xe9, 0x65, 0x78, 0xef, 0x5c,
	0xe9, 0x2e, 0x5b, 0x71, 0x68, 0xcf, 0x66, 0xc3, 0xd8, 0x9e, 0xcd, 0x76, 0xae, 0xf4, 0xee, 0x13,
	0xe6, 0x23, 0x3c, 0x31, 0x93, 0xaa, 0xcb, 0x82, 0x19, 0x7c, 0xc6, 0x42, 0xbc, 0x75, 0x98, 0x4f,
	0xbb, 0x2c, 0x72, 0x68, 0x8f, 0xb5, 0xf1, 0xf3, 0x5b, 0x29, 0x6f, 0xbb, 0xac, 0x43, 0xa2, 0x46,
	0x77, 0x59, 0x7c, 0x1d, 0xd1, 0xef, 0x76, 0xf7, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x8c,
	0x0e, 0xfc, 0x7e, 0x05, 0x00, 0x00,
}
