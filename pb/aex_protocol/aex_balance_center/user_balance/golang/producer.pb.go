// Code generated by protoc-gen-go. DO NOT EDIT.
// source: producer.proto

package userBalance

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChangeHoldingsResponse_Code int32

const (
	ChangeHoldingsResponse_Fail    ChangeHoldingsResponse_Code = 0
	ChangeHoldingsResponse_Success ChangeHoldingsResponse_Code = 1
	// 没有数据用以 rollback
	// 尝试 rollback 的时候，会先查询是否已有提交成功的数据
	// 如果没有提交成功的数据，却尝试 rollback
	// 则会返回该错误码
	ChangeHoldingsResponse_NoDataToRollback ChangeHoldingsResponse_Code = 2
)

var ChangeHoldingsResponse_Code_name = map[int32]string{
	0: "Fail",
	1: "Success",
	2: "NoDataToRollback",
}

var ChangeHoldingsResponse_Code_value = map[string]int32{
	"Fail":             0,
	"Success":          1,
	"NoDataToRollback": 2,
}

func (x ChangeHoldingsResponse_Code) String() string {
	return proto.EnumName(ChangeHoldingsResponse_Code_name, int32(x))
}

func (ChangeHoldingsResponse_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{2, 0}
}

type MoveHoldingsResponse_Code int32

const (
	MoveHoldingsResponse_Fail    MoveHoldingsResponse_Code = 0
	MoveHoldingsResponse_Success MoveHoldingsResponse_Code = 1
	// 没有数据用以 rollback
	// 尝试 rollback 的时候，会先查询是否已有提交成功的数据
	// 如果没有提交成功的数据，却尝试 rollback
	// 则会返回该错误码
	MoveHoldingsResponse_NoDataToRollback MoveHoldingsResponse_Code = 2
)

var MoveHoldingsResponse_Code_name = map[int32]string{
	0: "Fail",
	1: "Success",
	2: "NoDataToRollback",
}

var MoveHoldingsResponse_Code_value = map[string]int32{
	"Fail":             0,
	"Success":          1,
	"NoDataToRollback": 2,
}

func (x MoveHoldingsResponse_Code) String() string {
	return proto.EnumName(MoveHoldingsResponse_Code_name, int32(x))
}

func (MoveHoldingsResponse_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{5, 0}
}

// 持币变化方向
type MultiChangeHoldingsParams_Change_ChangeSide int32

const (
	MultiChangeHoldingsParams_Change_None MultiChangeHoldingsParams_Change_ChangeSide = 0
	// 增
	MultiChangeHoldingsParams_Change_Inc MultiChangeHoldingsParams_Change_ChangeSide = 1
	// 减
	MultiChangeHoldingsParams_Change_Dec MultiChangeHoldingsParams_Change_ChangeSide = 2
)

var MultiChangeHoldingsParams_Change_ChangeSide_name = map[int32]string{
	0: "None",
	1: "Inc",
	2: "Dec",
}

var MultiChangeHoldingsParams_Change_ChangeSide_value = map[string]int32{
	"None": 0,
	"Inc":  1,
	"Dec":  2,
}

func (x MultiChangeHoldingsParams_Change_ChangeSide) String() string {
	return proto.EnumName(MultiChangeHoldingsParams_Change_ChangeSide_name, int32(x))
}

func (MultiChangeHoldingsParams_Change_ChangeSide) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{6, 0, 0}
}

type MultiChangeHoldingsResponse_Code int32

const (
	MultiChangeHoldingsResponse_Fail    MultiChangeHoldingsResponse_Code = 0
	MultiChangeHoldingsResponse_Success MultiChangeHoldingsResponse_Code = 1
	// 没有数据用以 rollback
	// 尝试 rollback 的时候，会先查询是否已有提交成功的数据
	// 如果没有提交成功的数据，却尝试 rollback
	// 则会返回该错误码
	MultiChangeHoldingsResponse_NoDataToRollback MultiChangeHoldingsResponse_Code = 2
)

var MultiChangeHoldingsResponse_Code_name = map[int32]string{
	0: "Fail",
	1: "Success",
	2: "NoDataToRollback",
}

var MultiChangeHoldingsResponse_Code_value = map[string]int32{
	"Fail":             0,
	"Success":          1,
	"NoDataToRollback": 2,
}

func (x MultiChangeHoldingsResponse_Code) String() string {
	return proto.EnumName(MultiChangeHoldingsResponse_Code_name, int32(x))
}

func (MultiChangeHoldingsResponse_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{8, 0}
}

type ChangeHoldingsParams struct {
	// 用户 ID
	// 此参数调用方不用管
	// 用于 kafka 消息体中赋值
	// 服务端使用
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 币
	CoinCode string `protobuf:"bytes,2,opt,name=coinCode,proto3" json:"coinCode,omitempty"`
	// 要更改的币数
	// 数量大于零
	// 增减数量靠接口控制
	Change float64 `protobuf:"fixed64,3,opt,name=change,proto3" json:"change,omitempty"`
	// 要更改持币的类型
	ChangeType HoldingsType `protobuf:"varint,4,opt,name=changeType,proto3,enum=userBalance.HoldingsType" json:"changeType,omitempty"`
	// 业务
	Business *AexBusiness `protobuf:"bytes,5,opt,name=business,proto3" json:"business,omitempty"`
	// 需要回调的方法
	Callback *Callback `protobuf:"bytes,6,opt,name=callback,proto3" json:"callback,omitempty"`
	// 此参数调用方不用管
	// 用于 kafka 消息体中赋值
	// 服务端使用
	RequestID string `protobuf:"bytes,7,opt,name=requestID,proto3" json:"requestID,omitempty"`
	// 是否回滚操作
	IsRollback           bool     `protobuf:"varint,8,opt,name=isRollback,proto3" json:"isRollback,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeHoldingsParams) Reset()         { *m = ChangeHoldingsParams{} }
func (m *ChangeHoldingsParams) String() string { return proto.CompactTextString(m) }
func (*ChangeHoldingsParams) ProtoMessage()    {}
func (*ChangeHoldingsParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{0}
}

func (m *ChangeHoldingsParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeHoldingsParams.Unmarshal(m, b)
}
func (m *ChangeHoldingsParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeHoldingsParams.Marshal(b, m, deterministic)
}
func (m *ChangeHoldingsParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeHoldingsParams.Merge(m, src)
}
func (m *ChangeHoldingsParams) XXX_Size() int {
	return xxx_messageInfo_ChangeHoldingsParams.Size(m)
}
func (m *ChangeHoldingsParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeHoldingsParams.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeHoldingsParams proto.InternalMessageInfo

func (m *ChangeHoldingsParams) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ChangeHoldingsParams) GetCoinCode() string {
	if m != nil {
		return m.CoinCode
	}
	return ""
}

func (m *ChangeHoldingsParams) GetChange() float64 {
	if m != nil {
		return m.Change
	}
	return 0
}

func (m *ChangeHoldingsParams) GetChangeType() HoldingsType {
	if m != nil {
		return m.ChangeType
	}
	return HoldingsType_HoldingsTypeNone
}

func (m *ChangeHoldingsParams) GetBusiness() *AexBusiness {
	if m != nil {
		return m.Business
	}
	return nil
}

func (m *ChangeHoldingsParams) GetCallback() *Callback {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *ChangeHoldingsParams) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *ChangeHoldingsParams) GetIsRollback() bool {
	if m != nil {
		return m.IsRollback
	}
	return false
}

type ChangeHoldingsResponseData struct {
	// producer 会生成一条唯一的 requestID
	// 调用者通过此 requestID 附带的信息确认此次调用结果
	RequestID string `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	// 财务记录ID
	// 钱包那边需要操作财务记录，返回这个ID给钱包那边去更新财务记录
	OpID                 int64    `protobuf:"varint,2,opt,name=opID,proto3" json:"opID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeHoldingsResponseData) Reset()         { *m = ChangeHoldingsResponseData{} }
func (m *ChangeHoldingsResponseData) String() string { return proto.CompactTextString(m) }
func (*ChangeHoldingsResponseData) ProtoMessage()    {}
func (*ChangeHoldingsResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{1}
}

func (m *ChangeHoldingsResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeHoldingsResponseData.Unmarshal(m, b)
}
func (m *ChangeHoldingsResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeHoldingsResponseData.Marshal(b, m, deterministic)
}
func (m *ChangeHoldingsResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeHoldingsResponseData.Merge(m, src)
}
func (m *ChangeHoldingsResponseData) XXX_Size() int {
	return xxx_messageInfo_ChangeHoldingsResponseData.Size(m)
}
func (m *ChangeHoldingsResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeHoldingsResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeHoldingsResponseData proto.InternalMessageInfo

func (m *ChangeHoldingsResponseData) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *ChangeHoldingsResponseData) GetOpID() int64 {
	if m != nil {
		return m.OpID
	}
	return 0
}

type ChangeHoldingsResponse struct {
	StatusCode           ChangeHoldingsResponse_Code `protobuf:"varint,1,opt,name=statusCode,proto3,enum=userBalance.ChangeHoldingsResponse_Code" json:"statusCode,omitempty"`
	Desc                 string                      `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Data                 *ChangeHoldingsResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ChangeHoldingsResponse) Reset()         { *m = ChangeHoldingsResponse{} }
func (m *ChangeHoldingsResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeHoldingsResponse) ProtoMessage()    {}
func (*ChangeHoldingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{2}
}

func (m *ChangeHoldingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeHoldingsResponse.Unmarshal(m, b)
}
func (m *ChangeHoldingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeHoldingsResponse.Marshal(b, m, deterministic)
}
func (m *ChangeHoldingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeHoldingsResponse.Merge(m, src)
}
func (m *ChangeHoldingsResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeHoldingsResponse.Size(m)
}
func (m *ChangeHoldingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeHoldingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeHoldingsResponse proto.InternalMessageInfo

func (m *ChangeHoldingsResponse) GetStatusCode() ChangeHoldingsResponse_Code {
	if m != nil {
		return m.StatusCode
	}
	return ChangeHoldingsResponse_Fail
}

func (m *ChangeHoldingsResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ChangeHoldingsResponse) GetData() *ChangeHoldingsResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

type MoveHoldingsParams struct {
	// 用户 ID
	// 此参数调用方不用管
	// 用于 kafka 消息体中赋值
	// 服务端使用
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 币
	CoinCode string `protobuf:"bytes,2,opt,name=coinCode,proto3" json:"coinCode,omitempty"`
	// 移动持币数量
	Move float64 `protobuf:"fixed64,3,opt,name=move,proto3" json:"move,omitempty"`
	// 从何种持币移动到何种持币
	FromType HoldingsType `protobuf:"varint,4,opt,name=fromType,proto3,enum=userBalance.HoldingsType" json:"fromType,omitempty"`
	ToType   HoldingsType `protobuf:"varint,5,opt,name=toType,proto3,enum=userBalance.HoldingsType" json:"toType,omitempty"`
	// 业务
	Business *AexBusiness `protobuf:"bytes,6,opt,name=business,proto3" json:"business,omitempty"`
	// 需要回调的方法
	Callback *Callback `protobuf:"bytes,7,opt,name=callback,proto3" json:"callback,omitempty"`
	// 此参数调用方不用管
	// 用于 kafka 消息体中赋值
	// 服务端使用
	RequestID string `protobuf:"bytes,8,opt,name=requestID,proto3" json:"requestID,omitempty"`
	// 是否回滚操作
	IsRollback           bool     `protobuf:"varint,9,opt,name=isRollback,proto3" json:"isRollback,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveHoldingsParams) Reset()         { *m = MoveHoldingsParams{} }
func (m *MoveHoldingsParams) String() string { return proto.CompactTextString(m) }
func (*MoveHoldingsParams) ProtoMessage()    {}
func (*MoveHoldingsParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{3}
}

func (m *MoveHoldingsParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveHoldingsParams.Unmarshal(m, b)
}
func (m *MoveHoldingsParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveHoldingsParams.Marshal(b, m, deterministic)
}
func (m *MoveHoldingsParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveHoldingsParams.Merge(m, src)
}
func (m *MoveHoldingsParams) XXX_Size() int {
	return xxx_messageInfo_MoveHoldingsParams.Size(m)
}
func (m *MoveHoldingsParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveHoldingsParams.DiscardUnknown(m)
}

var xxx_messageInfo_MoveHoldingsParams proto.InternalMessageInfo

func (m *MoveHoldingsParams) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *MoveHoldingsParams) GetCoinCode() string {
	if m != nil {
		return m.CoinCode
	}
	return ""
}

func (m *MoveHoldingsParams) GetMove() float64 {
	if m != nil {
		return m.Move
	}
	return 0
}

func (m *MoveHoldingsParams) GetFromType() HoldingsType {
	if m != nil {
		return m.FromType
	}
	return HoldingsType_HoldingsTypeNone
}

func (m *MoveHoldingsParams) GetToType() HoldingsType {
	if m != nil {
		return m.ToType
	}
	return HoldingsType_HoldingsTypeNone
}

func (m *MoveHoldingsParams) GetBusiness() *AexBusiness {
	if m != nil {
		return m.Business
	}
	return nil
}

func (m *MoveHoldingsParams) GetCallback() *Callback {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *MoveHoldingsParams) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *MoveHoldingsParams) GetIsRollback() bool {
	if m != nil {
		return m.IsRollback
	}
	return false
}

type MoveHoldingsResponseData struct {
	// producer 会生成一条唯一的 requestID
	// 调用者通过此 requestID 附带的信息确认此次调用结果
	RequestID            string   `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveHoldingsResponseData) Reset()         { *m = MoveHoldingsResponseData{} }
func (m *MoveHoldingsResponseData) String() string { return proto.CompactTextString(m) }
func (*MoveHoldingsResponseData) ProtoMessage()    {}
func (*MoveHoldingsResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{4}
}

func (m *MoveHoldingsResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveHoldingsResponseData.Unmarshal(m, b)
}
func (m *MoveHoldingsResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveHoldingsResponseData.Marshal(b, m, deterministic)
}
func (m *MoveHoldingsResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveHoldingsResponseData.Merge(m, src)
}
func (m *MoveHoldingsResponseData) XXX_Size() int {
	return xxx_messageInfo_MoveHoldingsResponseData.Size(m)
}
func (m *MoveHoldingsResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveHoldingsResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_MoveHoldingsResponseData proto.InternalMessageInfo

func (m *MoveHoldingsResponseData) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type MoveHoldingsResponse struct {
	StatusCode           MoveHoldingsResponse_Code `protobuf:"varint,1,opt,name=statusCode,proto3,enum=userBalance.MoveHoldingsResponse_Code" json:"statusCode,omitempty"`
	Desc                 string                    `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Data                 *MoveHoldingsResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MoveHoldingsResponse) Reset()         { *m = MoveHoldingsResponse{} }
func (m *MoveHoldingsResponse) String() string { return proto.CompactTextString(m) }
func (*MoveHoldingsResponse) ProtoMessage()    {}
func (*MoveHoldingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{5}
}

func (m *MoveHoldingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveHoldingsResponse.Unmarshal(m, b)
}
func (m *MoveHoldingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveHoldingsResponse.Marshal(b, m, deterministic)
}
func (m *MoveHoldingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveHoldingsResponse.Merge(m, src)
}
func (m *MoveHoldingsResponse) XXX_Size() int {
	return xxx_messageInfo_MoveHoldingsResponse.Size(m)
}
func (m *MoveHoldingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveHoldingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveHoldingsResponse proto.InternalMessageInfo

func (m *MoveHoldingsResponse) GetStatusCode() MoveHoldingsResponse_Code {
	if m != nil {
		return m.StatusCode
	}
	return MoveHoldingsResponse_Fail
}

func (m *MoveHoldingsResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MoveHoldingsResponse) GetData() *MoveHoldingsResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

type MultiChangeHoldingsParams struct {
	// 用户 ID
	// 此参数调用方不用管
	// 用于 kafka 消息体中赋值
	// 服务端使用
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 币
	CoinCode string `protobuf:"bytes,2,opt,name=coinCode,proto3" json:"coinCode,omitempty"`
	// 变更持币
	Changes []*MultiChangeHoldingsParams_Change `protobuf:"bytes,3,rep,name=changes,proto3" json:"changes,omitempty"`
	// 业务
	Business *AexBusiness `protobuf:"bytes,4,opt,name=business,proto3" json:"business,omitempty"`
	// 需要回调的方法
	Callback *Callback `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	// 此参数调用方不用管
	// 用于 kafka 消息体中赋值
	// 服务端使用
	RequestID string `protobuf:"bytes,6,opt,name=requestID,proto3" json:"requestID,omitempty"`
	// 是否回滚操作
	IsRollback           bool     `protobuf:"varint,7,opt,name=isRollback,proto3" json:"isRollback,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiChangeHoldingsParams) Reset()         { *m = MultiChangeHoldingsParams{} }
func (m *MultiChangeHoldingsParams) String() string { return proto.CompactTextString(m) }
func (*MultiChangeHoldingsParams) ProtoMessage()    {}
func (*MultiChangeHoldingsParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{6}
}

func (m *MultiChangeHoldingsParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiChangeHoldingsParams.Unmarshal(m, b)
}
func (m *MultiChangeHoldingsParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiChangeHoldingsParams.Marshal(b, m, deterministic)
}
func (m *MultiChangeHoldingsParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiChangeHoldingsParams.Merge(m, src)
}
func (m *MultiChangeHoldingsParams) XXX_Size() int {
	return xxx_messageInfo_MultiChangeHoldingsParams.Size(m)
}
func (m *MultiChangeHoldingsParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiChangeHoldingsParams.DiscardUnknown(m)
}

var xxx_messageInfo_MultiChangeHoldingsParams proto.InternalMessageInfo

func (m *MultiChangeHoldingsParams) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *MultiChangeHoldingsParams) GetCoinCode() string {
	if m != nil {
		return m.CoinCode
	}
	return ""
}

func (m *MultiChangeHoldingsParams) GetChanges() []*MultiChangeHoldingsParams_Change {
	if m != nil {
		return m.Changes
	}
	return nil
}

func (m *MultiChangeHoldingsParams) GetBusiness() *AexBusiness {
	if m != nil {
		return m.Business
	}
	return nil
}

func (m *MultiChangeHoldingsParams) GetCallback() *Callback {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *MultiChangeHoldingsParams) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *MultiChangeHoldingsParams) GetIsRollback() bool {
	if m != nil {
		return m.IsRollback
	}
	return false
}

// 变更持币的数据
type MultiChangeHoldingsParams_Change struct {
	// 要更改持币的类型
	Type HoldingsType `protobuf:"varint,1,opt,name=type,proto3,enum=userBalance.HoldingsType" json:"type,omitempty"`
	// 要更改的币数
	// 数量大于零
	// 增减数量靠变化方向控制
	Change float64 `protobuf:"fixed64,2,opt,name=change,proto3" json:"change,omitempty"`
	// 持币变化方向
	Side                 MultiChangeHoldingsParams_Change_ChangeSide `protobuf:"varint,3,opt,name=side,proto3,enum=userBalance.MultiChangeHoldingsParams_Change_ChangeSide" json:"side,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *MultiChangeHoldingsParams_Change) Reset()         { *m = MultiChangeHoldingsParams_Change{} }
func (m *MultiChangeHoldingsParams_Change) String() string { return proto.CompactTextString(m) }
func (*MultiChangeHoldingsParams_Change) ProtoMessage()    {}
func (*MultiChangeHoldingsParams_Change) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{6, 0}
}

func (m *MultiChangeHoldingsParams_Change) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiChangeHoldingsParams_Change.Unmarshal(m, b)
}
func (m *MultiChangeHoldingsParams_Change) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiChangeHoldingsParams_Change.Marshal(b, m, deterministic)
}
func (m *MultiChangeHoldingsParams_Change) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiChangeHoldingsParams_Change.Merge(m, src)
}
func (m *MultiChangeHoldingsParams_Change) XXX_Size() int {
	return xxx_messageInfo_MultiChangeHoldingsParams_Change.Size(m)
}
func (m *MultiChangeHoldingsParams_Change) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiChangeHoldingsParams_Change.DiscardUnknown(m)
}

var xxx_messageInfo_MultiChangeHoldingsParams_Change proto.InternalMessageInfo

func (m *MultiChangeHoldingsParams_Change) GetType() HoldingsType {
	if m != nil {
		return m.Type
	}
	return HoldingsType_HoldingsTypeNone
}

func (m *MultiChangeHoldingsParams_Change) GetChange() float64 {
	if m != nil {
		return m.Change
	}
	return 0
}

func (m *MultiChangeHoldingsParams_Change) GetSide() MultiChangeHoldingsParams_Change_ChangeSide {
	if m != nil {
		return m.Side
	}
	return MultiChangeHoldingsParams_Change_None
}

type MultiChangeHoldingsResponseData struct {
	// producer 会生成一条唯一的 requestID
	// 调用者通过此 requestID 附带的信息确认此次调用结果
	RequestID            string   `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiChangeHoldingsResponseData) Reset()         { *m = MultiChangeHoldingsResponseData{} }
func (m *MultiChangeHoldingsResponseData) String() string { return proto.CompactTextString(m) }
func (*MultiChangeHoldingsResponseData) ProtoMessage()    {}
func (*MultiChangeHoldingsResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{7}
}

func (m *MultiChangeHoldingsResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiChangeHoldingsResponseData.Unmarshal(m, b)
}
func (m *MultiChangeHoldingsResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiChangeHoldingsResponseData.Marshal(b, m, deterministic)
}
func (m *MultiChangeHoldingsResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiChangeHoldingsResponseData.Merge(m, src)
}
func (m *MultiChangeHoldingsResponseData) XXX_Size() int {
	return xxx_messageInfo_MultiChangeHoldingsResponseData.Size(m)
}
func (m *MultiChangeHoldingsResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiChangeHoldingsResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_MultiChangeHoldingsResponseData proto.InternalMessageInfo

func (m *MultiChangeHoldingsResponseData) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type MultiChangeHoldingsResponse struct {
	StatusCode           MultiChangeHoldingsResponse_Code `protobuf:"varint,1,opt,name=statusCode,proto3,enum=userBalance.MultiChangeHoldingsResponse_Code" json:"statusCode,omitempty"`
	Desc                 string                           `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Data                 *MultiChangeHoldingsResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *MultiChangeHoldingsResponse) Reset()         { *m = MultiChangeHoldingsResponse{} }
func (m *MultiChangeHoldingsResponse) String() string { return proto.CompactTextString(m) }
func (*MultiChangeHoldingsResponse) ProtoMessage()    {}
func (*MultiChangeHoldingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d83c44b57ca991, []int{8}
}

func (m *MultiChangeHoldingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiChangeHoldingsResponse.Unmarshal(m, b)
}
func (m *MultiChangeHoldingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiChangeHoldingsResponse.Marshal(b, m, deterministic)
}
func (m *MultiChangeHoldingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiChangeHoldingsResponse.Merge(m, src)
}
func (m *MultiChangeHoldingsResponse) XXX_Size() int {
	return xxx_messageInfo_MultiChangeHoldingsResponse.Size(m)
}
func (m *MultiChangeHoldingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiChangeHoldingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultiChangeHoldingsResponse proto.InternalMessageInfo

func (m *MultiChangeHoldingsResponse) GetStatusCode() MultiChangeHoldingsResponse_Code {
	if m != nil {
		return m.StatusCode
	}
	return MultiChangeHoldingsResponse_Fail
}

func (m *MultiChangeHoldingsResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MultiChangeHoldingsResponse) GetData() *MultiChangeHoldingsResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("userBalance.ChangeHoldingsResponse_Code", ChangeHoldingsResponse_Code_name, ChangeHoldingsResponse_Code_value)
	proto.RegisterEnum("userBalance.MoveHoldingsResponse_Code", MoveHoldingsResponse_Code_name, MoveHoldingsResponse_Code_value)
	proto.RegisterEnum("userBalance.MultiChangeHoldingsParams_Change_ChangeSide", MultiChangeHoldingsParams_Change_ChangeSide_name, MultiChangeHoldingsParams_Change_ChangeSide_value)
	proto.RegisterEnum("userBalance.MultiChangeHoldingsResponse_Code", MultiChangeHoldingsResponse_Code_name, MultiChangeHoldingsResponse_Code_value)
	proto.RegisterType((*ChangeHoldingsParams)(nil), "userBalance.ChangeHoldingsParams")
	proto.RegisterType((*ChangeHoldingsResponseData)(nil), "userBalance.ChangeHoldingsResponseData")
	proto.RegisterType((*ChangeHoldingsResponse)(nil), "userBalance.ChangeHoldingsResponse")
	proto.RegisterType((*MoveHoldingsParams)(nil), "userBalance.MoveHoldingsParams")
	proto.RegisterType((*MoveHoldingsResponseData)(nil), "userBalance.MoveHoldingsResponseData")
	proto.RegisterType((*MoveHoldingsResponse)(nil), "userBalance.MoveHoldingsResponse")
	proto.RegisterType((*MultiChangeHoldingsParams)(nil), "userBalance.MultiChangeHoldingsParams")
	proto.RegisterType((*MultiChangeHoldingsParams_Change)(nil), "userBalance.MultiChangeHoldingsParams.Change")
	proto.RegisterType((*MultiChangeHoldingsResponseData)(nil), "userBalance.MultiChangeHoldingsResponseData")
	proto.RegisterType((*MultiChangeHoldingsResponse)(nil), "userBalance.MultiChangeHoldingsResponse")
}

func init() { proto.RegisterFile("producer.proto", fileDescriptor_38d83c44b57ca991) }

var fileDescriptor_38d83c44b57ca991 = []byte{
	// 851 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x4f, 0x8f, 0xdb, 0x44,
	0x14, 0xef, 0x24, 0xde, 0xc4, 0xfb, 0x42, 0x17, 0x6b, 0xd8, 0x56, 0xae, 0xa9, 0xda, 0x74, 0x2a,
	0xb6, 0xa6, 0x90, 0x58, 0xc9, 0x82, 0xd4, 0x3f, 0x07, 0xe8, 0x6e, 0x54, 0x1a, 0x89, 0x5d, 0x55,
	0xde, 0x72, 0xe1, 0x36, 0xb1, 0x87, 0xd4, 0xc2, 0xf1, 0x04, 0x8f, 0x1d, 0xc1, 0x81, 0x0b, 0x9c,
	0x38, 0xc3, 0x89, 0x0f, 0xc3, 0x95, 0x0f, 0xc0, 0x37, 0x40, 0x48, 0xe5, 0x1b, 0x70, 0x45, 0x1e,
	0x3b, 0x89, 0xbd, 0x38, 0x89, 0x37, 0xbb, 0x12, 0xa7, 0xbc, 0xcc, 0xbc, 0xf7, 0x7b, 0xbf, 0x79,
	0xf3, 0x7b, 0x6f, 0x0c, 0x7b, 0xd3, 0x90, 0xbb, 0xb1, 0xc3, 0xc2, 0xee, 0x34, 0xe4, 0x11, 0xc7,
	0xad, 0x58, 0xb0, 0xf0, 0x88, 0xfa, 0x34, 0x70, 0x98, 0x71, 0x7d, 0xcc, 0x02, 0x16, 0x52, 0x3f,
	0xdd, 0x33, 0x6e, 0x8f, 0x39, 0x1f, 0xfb, 0xcc, 0xa2, 0x53, 0xcf, 0xa2, 0x41, 0xc0, 0x23, 0x1a,
	0x79, 0x3c, 0x10, 0xe9, 0x2e, 0xf9, 0xad, 0x06, 0xfb, 0xc7, 0xaf, 0x69, 0x30, 0x66, 0x2f, 0xb8,
	0xef, 0x7a, 0xc1, 0x58, 0xbc, 0xa4, 0x21, 0x9d, 0x08, 0xac, 0x41, 0x3d, 0xf6, 0x5c, 0x1d, 0xb5,
	0x91, 0x59, 0xb7, 0x13, 0x13, 0x1b, 0xa0, 0x3a, 0xdc, 0x0b, 0x8e, 0xb9, 0xcb, 0xf4, 0x5a, 0x1b,
	0x99, 0xbb, 0xf6, 0xe2, 0x3f, 0xbe, 0x09, 0x0d, 0x47, 0xa2, 0xe8, 0xf5, 0x36, 0x32, 0x91, 0x9d,
	0xfd, 0xc3, 0x8f, 0x01, 0x52, 0xeb, 0xd5, 0x77, 0x53, 0xa6, 0x2b, 0x6d, 0x64, 0xee, 0xf5, 0x6f,
	0x75, 0x73, 0x6c, 0xbb, 0xf3, 0xb4, 0x89, 0x83, 0x9d, 0x73, 0xc6, 0x1f, 0x81, 0x3a, 0x8a, 0x85,
	0x17, 0x30, 0x21, 0xf4, 0x9d, 0x36, 0x32, 0x5b, 0x7d, 0xbd, 0x10, 0xf8, 0x8c, 0x7d, 0x7b, 0x94,
	0xed, 0xdb, 0x0b, 0x4f, 0xdc, 0x03, 0xd5, 0xa1, 0xbe, 0x3f, 0xa2, 0xce, 0xd7, 0x7a, 0x43, 0x46,
	0xdd, 0x28, 0x44, 0x1d, 0x67, 0x9b, 0xf6, 0xc2, 0x0d, 0xdf, 0x86, 0xdd, 0x90, 0x7d, 0x13, 0x33,
	0x11, 0x0d, 0x07, 0x7a, 0x53, 0x1e, 0x6c, 0xb9, 0x80, 0xef, 0x00, 0x78, 0xc2, 0xe6, 0x19, 0xa4,
	0xda, 0x46, 0xa6, 0x6a, 0xe7, 0x56, 0xc8, 0x29, 0x18, 0xc5, 0xfa, 0xd9, 0x4c, 0x4c, 0x79, 0x20,
	0xd8, 0x80, 0x46, 0xb4, 0x88, 0x8d, 0xce, 0x63, 0x63, 0x50, 0xf8, 0x74, 0x38, 0x90, 0xd5, 0xac,
	0xdb, 0xd2, 0x26, 0x7f, 0x23, 0xb8, 0x59, 0x0e, 0x88, 0x5f, 0x00, 0x88, 0x88, 0x46, 0xb1, 0x90,
	0x57, 0x80, 0x64, 0x31, 0xcd, 0xe2, 0xe9, 0x4a, 0x03, 0xbb, 0x89, 0xbf, 0x9d, 0x8b, 0x4d, 0x12,
	0xbb, 0x4c, 0x38, 0xd9, 0x35, 0x4a, 0x1b, 0x3f, 0x05, 0xc5, 0xa5, 0x11, 0x95, 0x17, 0xd8, 0xea,
	0x3f, 0xa8, 0x80, 0x9b, 0x9c, 0xd0, 0x96, 0x41, 0xe4, 0x10, 0x14, 0x09, 0xac, 0x82, 0xf2, 0x9c,
	0x7a, 0xbe, 0x76, 0x0d, 0xb7, 0xa0, 0x79, 0x16, 0x3b, 0x0e, 0x13, 0x42, 0x43, 0x78, 0x1f, 0xb4,
	0x53, 0x9e, 0xb8, 0xbf, 0xe2, 0xf3, 0xc2, 0x69, 0x35, 0xf2, 0xa6, 0x06, 0xf8, 0x84, 0xcf, 0x2e,
	0xa7, 0x3c, 0x0c, 0xca, 0x84, 0xcf, 0xe6, 0xba, 0x93, 0x36, 0xfe, 0x18, 0xd4, 0xaf, 0x42, 0x3e,
	0xa9, 0xa6, 0xb9, 0x85, 0x2b, 0xee, 0x41, 0x23, 0xe2, 0x32, 0x68, 0x67, 0x53, 0x50, 0xe6, 0x58,
	0x10, 0x69, 0x63, 0x2b, 0x91, 0x36, 0xb7, 0x10, 0xa9, 0xba, 0x5e, 0xa4, 0xbb, 0xff, 0x11, 0xe9,
	0x23, 0xd0, 0xf3, 0x85, 0xae, 0x2e, 0x51, 0xf2, 0x27, 0x82, 0xfd, 0xb2, 0x50, 0xfc, 0xbc, 0x44,
	0x8c, 0x07, 0x85, 0x53, 0x94, 0x85, 0x55, 0x93, 0xe2, 0xe3, 0x82, 0x14, 0xdf, 0xdb, 0x88, 0x7a,
	0x59, 0x21, 0xfe, 0xa8, 0xc0, 0xad, 0x93, 0xd8, 0x8f, 0xbc, 0x2b, 0x98, 0x84, 0x9f, 0x41, 0x33,
	0x1d, 0x62, 0x42, 0xaf, 0xb7, 0xeb, 0x66, 0xab, 0xdf, 0x29, 0xd2, 0x5f, 0x95, 0x26, 0xeb, 0x31,
	0x7b, 0x1e, 0x5d, 0x90, 0x96, 0xb2, 0x95, 0xb4, 0x76, 0xb6, 0x90, 0x56, 0x63, 0xbd, 0xb4, 0x9a,
	0xe7, 0xa5, 0x65, 0xfc, 0x8e, 0xa0, 0x91, 0x52, 0xc7, 0x1d, 0x50, 0xa2, 0xa4, 0x7b, 0xd0, 0xa6,
	0xee, 0x91, 0x6e, 0xb9, 0x37, 0xa3, 0x56, 0x78, 0x33, 0x3e, 0x07, 0x45, 0x78, 0x6e, 0xda, 0xd1,
	0x7b, 0xfd, 0x47, 0x17, 0x2a, 0x5f, 0xf6, 0x73, 0xe6, 0xb9, 0xcc, 0x96, 0x28, 0xc4, 0x04, 0x58,
	0xae, 0x25, 0xb2, 0x38, 0xe5, 0x01, 0xd3, 0xae, 0xe1, 0x26, 0xd4, 0x87, 0x81, 0xa3, 0xa1, 0xc4,
	0x18, 0x30, 0x47, 0xab, 0x91, 0x4f, 0xe0, 0x6e, 0x09, 0xfc, 0x05, 0x7a, 0xe5, 0x1f, 0x04, 0xef,
	0xae, 0x41, 0xc0, 0x27, 0x25, 0x2d, 0xb3, 0x51, 0x1d, 0x17, 0xeb, 0x9c, 0x4f, 0x0b, 0x9d, 0xf3,
	0x61, 0x55, 0xf0, 0x4b, 0x36, 0x50, 0xff, 0xcd, 0x0e, 0x18, 0x5f, 0x2c, 0x53, 0xbd, 0xcc, 0xbe,
	0x4e, 0xce, 0x58, 0x38, 0xf3, 0x1c, 0x86, 0x7f, 0x42, 0xa0, 0x0d, 0x03, 0x27, 0x64, 0x54, 0x2c,
	0x52, 0xe3, 0x7b, 0x6b, 0x5e, 0x98, 0xf4, 0x4e, 0x8d, 0xfb, 0x15, 0x1e, 0x21, 0xd2, 0xf9, 0xe1,
	0x8f, 0xbf, 0x7e, 0xae, 0x3d, 0x20, 0xc4, 0x9a, 0xf5, 0xac, 0x51, 0xea, 0x6b, 0xbd, 0xce, 0xbc,
	0xac, 0x04, 0xc0, 0xf2, 0xb2, 0xdc, 0x4f, 0xd0, 0x43, 0xc9, 0x65, 0xc0, 0xfe, 0x3f, 0x2e, 0x2e,
	0x5b, 0x72, 0xf9, 0x05, 0xc1, 0x8d, 0xf3, 0x5c, 0x9e, 0xb9, 0x13, 0x2f, 0xb8, 0x32, 0x42, 0x87,
	0x92, 0x50, 0x87, 0x98, 0x79, 0x42, 0x34, 0x49, 0xb1, 0x86, 0xd6, 0xf7, 0xf0, 0x56, 0x7e, 0xca,
	0xe2, 0xbb, 0x2b, 0x07, 0x70, 0x46, 0xe5, 0xde, 0xc6, 0x09, 0x4d, 0xde, 0x97, 0x44, 0xee, 0x93,
	0x3b, 0xab, 0x2b, 0x93, 0x3c, 0xdd, 0x49, 0xfa, 0x5f, 0x11, 0xbc, 0x53, 0xa2, 0x55, 0x7c, 0x50,
	0x6d, 0x12, 0x18, 0x66, 0x55, 0xd5, 0x93, 0x9e, 0x24, 0xf5, 0x01, 0x39, 0x58, 0x4d, 0x2a, 0x9d,
	0x49, 0xd6, 0x24, 0x41, 0x79, 0x82, 0x1e, 0x1e, 0xbd, 0xfd, 0xe5, 0xf5, 0xee, 0xd3, 0x1c, 0xfe,
	0xa8, 0x21, 0xbf, 0xa3, 0x0f, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x1f, 0xca, 0x0e, 0x0b, 0x93,
	0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserBalanceProducerServiceClient is the client API for UserBalanceProducerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserBalanceProducerServiceClient interface {
	// 增加用户持币
	IncreaseHoldings(ctx context.Context, in *ChangeHoldingsParams, opts ...grpc.CallOption) (*ChangeHoldingsResponse, error)
	// 扣除用户持币
	DecreaseHoldings(ctx context.Context, in *ChangeHoldingsParams, opts ...grpc.CallOption) (*ChangeHoldingsResponse, error)
	// 扣除用户持币
	// 允许将用户持币扣除为负数
	DecreaseHoldingsAdmin(ctx context.Context, in *ChangeHoldingsParams, opts ...grpc.CallOption) (*ChangeHoldingsResponse, error)
	// 资产移动
	MoveHoldings(ctx context.Context, in *MoveHoldingsParams, opts ...grpc.CallOption) (*MoveHoldingsResponse, error)
	// 资产变动
	MultiChangeHoldings(ctx context.Context, in *MultiChangeHoldingsParams, opts ...grpc.CallOption) (*MultiChangeHoldingsResponse, error)
}

type userBalanceProducerServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserBalanceProducerServiceClient(cc *grpc.ClientConn) UserBalanceProducerServiceClient {
	return &userBalanceProducerServiceClient{cc}
}

func (c *userBalanceProducerServiceClient) IncreaseHoldings(ctx context.Context, in *ChangeHoldingsParams, opts ...grpc.CallOption) (*ChangeHoldingsResponse, error) {
	out := new(ChangeHoldingsResponse)
	err := c.cc.Invoke(ctx, "/userBalance.UserBalanceProducerService/IncreaseHoldings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userBalanceProducerServiceClient) DecreaseHoldings(ctx context.Context, in *ChangeHoldingsParams, opts ...grpc.CallOption) (*ChangeHoldingsResponse, error) {
	out := new(ChangeHoldingsResponse)
	err := c.cc.Invoke(ctx, "/userBalance.UserBalanceProducerService/DecreaseHoldings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userBalanceProducerServiceClient) DecreaseHoldingsAdmin(ctx context.Context, in *ChangeHoldingsParams, opts ...grpc.CallOption) (*ChangeHoldingsResponse, error) {
	out := new(ChangeHoldingsResponse)
	err := c.cc.Invoke(ctx, "/userBalance.UserBalanceProducerService/DecreaseHoldingsAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userBalanceProducerServiceClient) MoveHoldings(ctx context.Context, in *MoveHoldingsParams, opts ...grpc.CallOption) (*MoveHoldingsResponse, error) {
	out := new(MoveHoldingsResponse)
	err := c.cc.Invoke(ctx, "/userBalance.UserBalanceProducerService/MoveHoldings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userBalanceProducerServiceClient) MultiChangeHoldings(ctx context.Context, in *MultiChangeHoldingsParams, opts ...grpc.CallOption) (*MultiChangeHoldingsResponse, error) {
	out := new(MultiChangeHoldingsResponse)
	err := c.cc.Invoke(ctx, "/userBalance.UserBalanceProducerService/MultiChangeHoldings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserBalanceProducerServiceServer is the server API for UserBalanceProducerService service.
type UserBalanceProducerServiceServer interface {
	// 增加用户持币
	IncreaseHoldings(context.Context, *ChangeHoldingsParams) (*ChangeHoldingsResponse, error)
	// 扣除用户持币
	DecreaseHoldings(context.Context, *ChangeHoldingsParams) (*ChangeHoldingsResponse, error)
	// 扣除用户持币
	// 允许将用户持币扣除为负数
	DecreaseHoldingsAdmin(context.Context, *ChangeHoldingsParams) (*ChangeHoldingsResponse, error)
	// 资产移动
	MoveHoldings(context.Context, *MoveHoldingsParams) (*MoveHoldingsResponse, error)
	// 资产变动
	MultiChangeHoldings(context.Context, *MultiChangeHoldingsParams) (*MultiChangeHoldingsResponse, error)
}

// UnimplementedUserBalanceProducerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserBalanceProducerServiceServer struct {
}

func (*UnimplementedUserBalanceProducerServiceServer) IncreaseHoldings(ctx context.Context, req *ChangeHoldingsParams) (*ChangeHoldingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncreaseHoldings not implemented")
}
func (*UnimplementedUserBalanceProducerServiceServer) DecreaseHoldings(ctx context.Context, req *ChangeHoldingsParams) (*ChangeHoldingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecreaseHoldings not implemented")
}
func (*UnimplementedUserBalanceProducerServiceServer) DecreaseHoldingsAdmin(ctx context.Context, req *ChangeHoldingsParams) (*ChangeHoldingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecreaseHoldingsAdmin not implemented")
}
func (*UnimplementedUserBalanceProducerServiceServer) MoveHoldings(ctx context.Context, req *MoveHoldingsParams) (*MoveHoldingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveHoldings not implemented")
}
func (*UnimplementedUserBalanceProducerServiceServer) MultiChangeHoldings(ctx context.Context, req *MultiChangeHoldingsParams) (*MultiChangeHoldingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiChangeHoldings not implemented")
}

func RegisterUserBalanceProducerServiceServer(s *grpc.Server, srv UserBalanceProducerServiceServer) {
	s.RegisterService(&_UserBalanceProducerService_serviceDesc, srv)
}

func _UserBalanceProducerService_IncreaseHoldings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeHoldingsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBalanceProducerServiceServer).IncreaseHoldings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userBalance.UserBalanceProducerService/IncreaseHoldings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBalanceProducerServiceServer).IncreaseHoldings(ctx, req.(*ChangeHoldingsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserBalanceProducerService_DecreaseHoldings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeHoldingsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBalanceProducerServiceServer).DecreaseHoldings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userBalance.UserBalanceProducerService/DecreaseHoldings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBalanceProducerServiceServer).DecreaseHoldings(ctx, req.(*ChangeHoldingsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserBalanceProducerService_DecreaseHoldingsAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeHoldingsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBalanceProducerServiceServer).DecreaseHoldingsAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userBalance.UserBalanceProducerService/DecreaseHoldingsAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBalanceProducerServiceServer).DecreaseHoldingsAdmin(ctx, req.(*ChangeHoldingsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserBalanceProducerService_MoveHoldings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveHoldingsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBalanceProducerServiceServer).MoveHoldings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userBalance.UserBalanceProducerService/MoveHoldings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBalanceProducerServiceServer).MoveHoldings(ctx, req.(*MoveHoldingsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserBalanceProducerService_MultiChangeHoldings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiChangeHoldingsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBalanceProducerServiceServer).MultiChangeHoldings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userBalance.UserBalanceProducerService/MultiChangeHoldings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBalanceProducerServiceServer).MultiChangeHoldings(ctx, req.(*MultiChangeHoldingsParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserBalanceProducerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userBalance.UserBalanceProducerService",
	HandlerType: (*UserBalanceProducerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IncreaseHoldings",
			Handler:    _UserBalanceProducerService_IncreaseHoldings_Handler,
		},
		{
			MethodName: "DecreaseHoldings",
			Handler:    _UserBalanceProducerService_DecreaseHoldings_Handler,
		},
		{
			MethodName: "DecreaseHoldingsAdmin",
			Handler:    _UserBalanceProducerService_DecreaseHoldingsAdmin_Handler,
		},
		{
			MethodName: "MoveHoldings",
			Handler:    _UserBalanceProducerService_MoveHoldings_Handler,
		},
		{
			MethodName: "MultiChangeHoldings",
			Handler:    _UserBalanceProducerService_MultiChangeHoldings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "producer.proto",
}
