// Code generated by protoc-gen-go. DO NOT EDIT.
// source: querier.proto

package userBalance

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BatchUserAssetsResponse_Code int32

const (
	BatchUserAssetsResponse_Fail    BatchUserAssetsResponse_Code = 0
	BatchUserAssetsResponse_Success BatchUserAssetsResponse_Code = 1
)

var BatchUserAssetsResponse_Code_name = map[int32]string{
	0: "Fail",
	1: "Success",
}

var BatchUserAssetsResponse_Code_value = map[string]int32{
	"Fail":    0,
	"Success": 1,
}

func (x BatchUserAssetsResponse_Code) String() string {
	return proto.EnumName(BatchUserAssetsResponse_Code_name, int32(x))
}

func (BatchUserAssetsResponse_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7edfe438abd6b96f, []int{2, 0}
}

type BatchUserAssetsParams struct {
	// 要查询的用户
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 要查询的币种
	CoinCodes []string `protobuf:"bytes,2,rep,name=coinCodes,proto3" json:"coinCodes,omitempty"`
	// 要查询的持币类型
	Types []HoldingsType `protobuf:"varint,3,rep,packed,name=types,proto3,enum=userBalance.HoldingsType" json:"types,omitempty"`
	// 如果有 coinCodes 参数，按 coinCodes 参数查询
	// 否则，当 isTotal = true 时，表示查询所有币种持币
	IsTotal              bool     `protobuf:"varint,4,opt,name=isTotal,proto3" json:"isTotal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchUserAssetsParams) Reset()         { *m = BatchUserAssetsParams{} }
func (m *BatchUserAssetsParams) String() string { return proto.CompactTextString(m) }
func (*BatchUserAssetsParams) ProtoMessage()    {}
func (*BatchUserAssetsParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_7edfe438abd6b96f, []int{0}
}

func (m *BatchUserAssetsParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUserAssetsParams.Unmarshal(m, b)
}
func (m *BatchUserAssetsParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUserAssetsParams.Marshal(b, m, deterministic)
}
func (m *BatchUserAssetsParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUserAssetsParams.Merge(m, src)
}
func (m *BatchUserAssetsParams) XXX_Size() int {
	return xxx_messageInfo_BatchUserAssetsParams.Size(m)
}
func (m *BatchUserAssetsParams) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUserAssetsParams.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUserAssetsParams proto.InternalMessageInfo

func (m *BatchUserAssetsParams) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *BatchUserAssetsParams) GetCoinCodes() []string {
	if m != nil {
		return m.CoinCodes
	}
	return nil
}

func (m *BatchUserAssetsParams) GetTypes() []HoldingsType {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *BatchUserAssetsParams) GetIsTotal() bool {
	if m != nil {
		return m.IsTotal
	}
	return false
}

type BatchUserAssetsResponseData struct {
	// 用户持币
	CoinHoldings         []*CoinHoldings `protobuf:"bytes,1,rep,name=coinHoldings,proto3" json:"coinHoldings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BatchUserAssetsResponseData) Reset()         { *m = BatchUserAssetsResponseData{} }
func (m *BatchUserAssetsResponseData) String() string { return proto.CompactTextString(m) }
func (*BatchUserAssetsResponseData) ProtoMessage()    {}
func (*BatchUserAssetsResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7edfe438abd6b96f, []int{1}
}

func (m *BatchUserAssetsResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUserAssetsResponseData.Unmarshal(m, b)
}
func (m *BatchUserAssetsResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUserAssetsResponseData.Marshal(b, m, deterministic)
}
func (m *BatchUserAssetsResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUserAssetsResponseData.Merge(m, src)
}
func (m *BatchUserAssetsResponseData) XXX_Size() int {
	return xxx_messageInfo_BatchUserAssetsResponseData.Size(m)
}
func (m *BatchUserAssetsResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUserAssetsResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUserAssetsResponseData proto.InternalMessageInfo

func (m *BatchUserAssetsResponseData) GetCoinHoldings() []*CoinHoldings {
	if m != nil {
		return m.CoinHoldings
	}
	return nil
}

type BatchUserAssetsResponse struct {
	StatusCode           BatchUserAssetsResponse_Code `protobuf:"varint,1,opt,name=statusCode,proto3,enum=userBalance.BatchUserAssetsResponse_Code" json:"statusCode,omitempty"`
	Desc                 string                       `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Data                 *BatchUserAssetsResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BatchUserAssetsResponse) Reset()         { *m = BatchUserAssetsResponse{} }
func (m *BatchUserAssetsResponse) String() string { return proto.CompactTextString(m) }
func (*BatchUserAssetsResponse) ProtoMessage()    {}
func (*BatchUserAssetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7edfe438abd6b96f, []int{2}
}

func (m *BatchUserAssetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUserAssetsResponse.Unmarshal(m, b)
}
func (m *BatchUserAssetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUserAssetsResponse.Marshal(b, m, deterministic)
}
func (m *BatchUserAssetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUserAssetsResponse.Merge(m, src)
}
func (m *BatchUserAssetsResponse) XXX_Size() int {
	return xxx_messageInfo_BatchUserAssetsResponse.Size(m)
}
func (m *BatchUserAssetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUserAssetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUserAssetsResponse proto.InternalMessageInfo

func (m *BatchUserAssetsResponse) GetStatusCode() BatchUserAssetsResponse_Code {
	if m != nil {
		return m.StatusCode
	}
	return BatchUserAssetsResponse_Fail
}

func (m *BatchUserAssetsResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *BatchUserAssetsResponse) GetData() *BatchUserAssetsResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("userBalance.BatchUserAssetsResponse_Code", BatchUserAssetsResponse_Code_name, BatchUserAssetsResponse_Code_value)
	proto.RegisterType((*BatchUserAssetsParams)(nil), "userBalance.BatchUserAssetsParams")
	proto.RegisterType((*BatchUserAssetsResponseData)(nil), "userBalance.BatchUserAssetsResponseData")
	proto.RegisterType((*BatchUserAssetsResponse)(nil), "userBalance.BatchUserAssetsResponse")
}

func init() { proto.RegisterFile("querier.proto", fileDescriptor_7edfe438abd6b96f) }

var fileDescriptor_7edfe438abd6b96f = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xd9, 0xd8, 0xd0, 0x66, 0x42, 0xda, 0x68, 0x25, 0x54, 0x13, 0x5a, 0x61, 0x59, 0x20,
	0x99, 0x8b, 0x2d, 0xc2, 0x11, 0x38, 0x90, 0x22, 0x04, 0x37, 0xd8, 0xb6, 0x17, 0xc4, 0x65, 0x62,
	0x8f, 0xc2, 0x4a, 0x66, 0xd7, 0xec, 0xac, 0x2b, 0xe5, 0xda, 0x47, 0x80, 0x3b, 0x2f, 0x85, 0x78,
	0x03, 0x1e, 0x04, 0xd9, 0x56, 0x55, 0x37, 0x52, 0x51, 0x6f, 0xb3, 0x3b, 0xff, 0xff, 0xfd, 0x33,
	0xd2, 0xc0, 0xf4, 0x7b, 0x43, 0x4e, 0x93, 0xcb, 0x6a, 0x67, 0xbd, 0x95, 0x93, 0x86, 0xc9, 0x2d,
	0xb1, 0x42, 0x53, 0xd0, 0x7c, 0xba, 0x26, 0x43, 0x0e, 0xab, 0xbe, 0x37, 0x3f, 0x5c, 0x5b, 0xbb,
	0xae, 0x28, 0xc7, 0x5a, 0xe7, 0x68, 0x8c, 0xf5, 0xe8, 0xb5, 0x35, 0xdc, 0x77, 0x93, 0x1f, 0x02,
	0x1e, 0x2c, 0xd1, 0x17, 0x5f, 0xcf, 0x98, 0xdc, 0x1b, 0x66, 0xf2, 0xfc, 0x11, 0x1d, 0x7e, 0x63,
	0x39, 0x83, 0xa0, 0xd1, 0x65, 0x24, 0x62, 0x91, 0x06, 0xaa, 0x2d, 0xe5, 0x21, 0x8c, 0x0b, 0xab,
	0xcd, 0xb1, 0x2d, 0x89, 0xa3, 0x51, 0x1c, 0xa4, 0x63, 0x75, 0xf5, 0x21, 0x73, 0xb8, 0xeb, 0x37,
	0x35, 0x71, 0x14, 0xc4, 0x41, 0xba, 0xb7, 0x78, 0x98, 0x0d, 0x66, 0xca, 0xde, 0xdb, 0xaa, 0xd4,
	0x66, 0xcd, 0xa7, 0x9b, 0x9a, 0x54, 0xaf, 0x93, 0x11, 0xec, 0x68, 0x3e, 0xb5, 0x1e, 0xab, 0x28,
	0x8c, 0x45, 0xba, 0xab, 0x2e, 0x9f, 0xc9, 0x17, 0x78, 0xb4, 0x35, 0x93, 0x22, 0xae, 0xad, 0x61,
	0x7a, 0x8b, 0x1e, 0xe5, 0x6b, 0xb8, 0xdf, 0xc6, 0x5e, 0x32, 0x23, 0x11, 0x07, 0xe9, 0x64, 0x2b,
	0xf0, 0x78, 0x20, 0x50, 0xd7, 0xe4, 0xc9, 0x1f, 0x01, 0x07, 0x37, 0xe0, 0xe5, 0x07, 0x00, 0xf6,
	0xe8, 0x1b, 0x6e, 0x77, 0xea, 0x76, 0xdf, 0x5b, 0x3c, 0xbb, 0x06, 0xbe, 0xc1, 0x99, 0xb5, 0x06,
	0x35, 0x30, 0x4b, 0x09, 0x61, 0x49, 0x5c, 0x44, 0xa3, 0x58, 0xa4, 0x63, 0xd5, 0xd5, 0xf2, 0x15,
	0x84, 0x25, 0x7a, 0x8c, 0x82, 0x58, 0xa4, 0x93, 0x45, 0x7a, 0x1b, 0x70, 0xbb, 0xb1, 0xea, 0x5c,
	0xc9, 0x11, 0x84, 0x1d, 0x79, 0x17, 0xc2, 0x77, 0xa8, 0xab, 0xd9, 0x1d, 0x39, 0x81, 0x9d, 0x93,
	0xa6, 0x28, 0x88, 0x79, 0x26, 0x16, 0xbf, 0x04, 0x1c, 0x9c, 0x5d, 0x01, 0x3f, 0x35, 0xe4, 0x36,
	0x27, 0xe4, 0xce, 0x75, 0x41, 0xf2, 0x42, 0xc0, 0xfe, 0x56, 0x80, 0x4c, 0xfe, 0x17, 0xdf, 0x1f,
	0xc1, 0xfc, 0xc9, 0x6d, 0x46, 0x4c, 0x9e, 0x5e, 0xfc, 0xfe, 0xfb, 0x73, 0xf4, 0x58, 0x1e, 0xe5,
	0xe7, 0xcf, 0xf3, 0x55, 0x2f, 0xce, 0xb1, 0xd3, 0xe4, 0xad, 0x3f, 0x5f, 0xb5, 0xc6, 0xe5, 0xfe,
	0xe7, 0x69, 0xf6, 0x72, 0xc0, 0x5b, 0xdd, 0xeb, 0x6e, 0xf0, 0xc5, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x03, 0xe3, 0xa6, 0xc2, 0xce, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserBalanceQueryServiceClient is the client API for UserBalanceQueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserBalanceQueryServiceClient interface {
	// 查询:
	// 1. 多种资产类型
	// 2. 多种币
	// 资产数据
	BatchUserAssets(ctx context.Context, in *BatchUserAssetsParams, opts ...grpc.CallOption) (*BatchUserAssetsResponse, error)
}

type userBalanceQueryServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserBalanceQueryServiceClient(cc *grpc.ClientConn) UserBalanceQueryServiceClient {
	return &userBalanceQueryServiceClient{cc}
}

func (c *userBalanceQueryServiceClient) BatchUserAssets(ctx context.Context, in *BatchUserAssetsParams, opts ...grpc.CallOption) (*BatchUserAssetsResponse, error) {
	out := new(BatchUserAssetsResponse)
	err := c.cc.Invoke(ctx, "/userBalance.UserBalanceQueryService/BatchUserAssets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserBalanceQueryServiceServer is the server API for UserBalanceQueryService service.
type UserBalanceQueryServiceServer interface {
	// 查询:
	// 1. 多种资产类型
	// 2. 多种币
	// 资产数据
	BatchUserAssets(context.Context, *BatchUserAssetsParams) (*BatchUserAssetsResponse, error)
}

// UnimplementedUserBalanceQueryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserBalanceQueryServiceServer struct {
}

func (*UnimplementedUserBalanceQueryServiceServer) BatchUserAssets(ctx context.Context, req *BatchUserAssetsParams) (*BatchUserAssetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchUserAssets not implemented")
}

func RegisterUserBalanceQueryServiceServer(s *grpc.Server, srv UserBalanceQueryServiceServer) {
	s.RegisterService(&_UserBalanceQueryService_serviceDesc, srv)
}

func _UserBalanceQueryService_BatchUserAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchUserAssetsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBalanceQueryServiceServer).BatchUserAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userBalance.UserBalanceQueryService/BatchUserAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBalanceQueryServiceServer).BatchUserAssets(ctx, req.(*BatchUserAssetsParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserBalanceQueryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userBalance.UserBalanceQueryService",
	HandlerType: (*UserBalanceQueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BatchUserAssets",
			Handler:    _UserBalanceQueryService_BatchUserAssets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "querier.proto",
}
