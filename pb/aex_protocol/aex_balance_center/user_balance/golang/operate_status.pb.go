// Code generated by protoc-gen-go. DO NOT EDIT.
// source: operate_status.proto

package userBalance

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OperateStatus int32

const (
	// 保留字段
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_NONE OperateStatus = 0
	// 提币
	// 无效状态
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_NA OperateStatus = 1000
	// 提币请求超过限额需要审核
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_NEED_AUDIT OperateStatus = 1001
	// 提币请求不需要审核
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_NO_NEED_AUDIT OperateStatus = 1002
	// 提币请求审核已通过
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_AUDIT_PASSED OperateStatus = 1003
	// 提币请求审核未通过
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_ADIT_DENY OperateStatus = 1004
	// 币正在发送中
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_SENDING OperateStatus = 1005
	// 币发送成功
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_SENT_OK OperateStatus = 1006
	// 币发送失败
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_SENT_FAIL OperateStatus = 1007
	// 其他未定义情况
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_OTHER_FAIL OperateStatus = 1008
	// 提币审核延迟发送
	OperateStatus_OPERATE_STATUS_WITHDRAW_STATUS_DELAYED_SEND OperateStatus = 1009
	//虚拟币充值补单，确认中(前端显示处理中)
	OperateStatus_OPERATE_STATUS_VIRTUAL_COIN_RECHARGE_CONFIRMING OperateStatus = 1010
	//虚拟币充值已到账
	OperateStatus_OPERATE_STATUS_VIRTUAL_COIN_RECHARGE_OK OperateStatus = 1011
	//算力收益总账户充值订单无效（仅用于管理后台算力收益核对功能分发收益时将打收益的总账户的财务记录修改为无效状态，方便资管对账）
	OperateStatus_OPERATE_STATUS_CLOUD_BONUS_TOTAL_ACCOUNT_INVALID OperateStatus = 1012
	// 普通财务记录操作状态
	//财务记录无效(对于所有财务记录通用，表名该财务记录失效)(前端显示已失效)
	OperateStatus_OPERATE_STATUS_INVALID OperateStatus = 2000
	//非充提类的财务记录操作已成功
	OperateStatus_OPERATE_STATUS_CREDITED OperateStatus = 2001
	// (管理后台批量入账)待审核状态(未在平台前端显示)
	OperateStatus_OPERATE_STATUS_BATCH_ENTRY_TO_CHECK OperateStatus = 2002
	// (管理后台批量入账)审核订单删除(未在平台前端显示)
	OperateStatus_OPERATE_STATUS_BATCH_ENTRY_CHECK_DELETE OperateStatus = 2003
)

var OperateStatus_name = map[int32]string{
	0:    "OPERATE_STATUS_WITHDRAW_STATUS_NONE",
	1000: "OPERATE_STATUS_WITHDRAW_STATUS_NA",
	1001: "OPERATE_STATUS_WITHDRAW_STATUS_NEED_AUDIT",
	1002: "OPERATE_STATUS_WITHDRAW_STATUS_NO_NEED_AUDIT",
	1003: "OPERATE_STATUS_WITHDRAW_STATUS_AUDIT_PASSED",
	1004: "OPERATE_STATUS_WITHDRAW_STATUS_ADIT_DENY",
	1005: "OPERATE_STATUS_WITHDRAW_STATUS_SENDING",
	1006: "OPERATE_STATUS_WITHDRAW_STATUS_SENT_OK",
	1007: "OPERATE_STATUS_WITHDRAW_STATUS_SENT_FAIL",
	1008: "OPERATE_STATUS_WITHDRAW_STATUS_OTHER_FAIL",
	1009: "OPERATE_STATUS_WITHDRAW_STATUS_DELAYED_SEND",
	1010: "OPERATE_STATUS_VIRTUAL_COIN_RECHARGE_CONFIRMING",
	1011: "OPERATE_STATUS_VIRTUAL_COIN_RECHARGE_OK",
	1012: "OPERATE_STATUS_CLOUD_BONUS_TOTAL_ACCOUNT_INVALID",
	2000: "OPERATE_STATUS_INVALID",
	2001: "OPERATE_STATUS_CREDITED",
	2002: "OPERATE_STATUS_BATCH_ENTRY_TO_CHECK",
	2003: "OPERATE_STATUS_BATCH_ENTRY_CHECK_DELETE",
}

var OperateStatus_value = map[string]int32{
	"OPERATE_STATUS_WITHDRAW_STATUS_NONE":              0,
	"OPERATE_STATUS_WITHDRAW_STATUS_NA":                1000,
	"OPERATE_STATUS_WITHDRAW_STATUS_NEED_AUDIT":        1001,
	"OPERATE_STATUS_WITHDRAW_STATUS_NO_NEED_AUDIT":     1002,
	"OPERATE_STATUS_WITHDRAW_STATUS_AUDIT_PASSED":      1003,
	"OPERATE_STATUS_WITHDRAW_STATUS_ADIT_DENY":         1004,
	"OPERATE_STATUS_WITHDRAW_STATUS_SENDING":           1005,
	"OPERATE_STATUS_WITHDRAW_STATUS_SENT_OK":           1006,
	"OPERATE_STATUS_WITHDRAW_STATUS_SENT_FAIL":         1007,
	"OPERATE_STATUS_WITHDRAW_STATUS_OTHER_FAIL":        1008,
	"OPERATE_STATUS_WITHDRAW_STATUS_DELAYED_SEND":      1009,
	"OPERATE_STATUS_VIRTUAL_COIN_RECHARGE_CONFIRMING":  1010,
	"OPERATE_STATUS_VIRTUAL_COIN_RECHARGE_OK":          1011,
	"OPERATE_STATUS_CLOUD_BONUS_TOTAL_ACCOUNT_INVALID": 1012,
	"OPERATE_STATUS_INVALID":                           2000,
	"OPERATE_STATUS_CREDITED":                          2001,
	"OPERATE_STATUS_BATCH_ENTRY_TO_CHECK":              2002,
	"OPERATE_STATUS_BATCH_ENTRY_CHECK_DELETE":          2003,
}

func (x OperateStatus) String() string {
	return proto.EnumName(OperateStatus_name, int32(x))
}

func (OperateStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_578379885a70034d, []int{0}
}

func init() {
	proto.RegisterEnum("userBalance.OperateStatus", OperateStatus_name, OperateStatus_value)
}

func init() { proto.RegisterFile("operate_status.proto", fileDescriptor_578379885a70034d) }

var fileDescriptor_578379885a70034d = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcd, 0xaa, 0x13, 0x31,
	0x14, 0xc7, 0x5d, 0xdd, 0x40, 0xe4, 0x32, 0x21, 0x88, 0x2e, 0x74, 0x23, 0xc2, 0xbd, 0x57, 0x5b,
	0x6b, 0x45, 0x5d, 0xb9, 0xca, 0x24, 0xa7, 0x9d, 0xd0, 0x31, 0x29, 0x99, 0x33, 0x2d, 0x75, 0x73,
	0x18, 0x65, 0x76, 0x62, 0x4b, 0x3b, 0x7d, 0x3c, 0xdf, 0xc1, 0x8f, 0x97, 0xf0, 0xfb, 0xfb, 0x01,
	0xa4, 0x53, 0x0a, 0x65, 0xbc, 0x30, 0xb3, 0x0c, 0xf9, 0xfd, 0xc2, 0xf9, 0xff, 0xc9, 0xe1, 0xd7,
	0x96, 0xab, 0x72, 0x5d, 0x54, 0x25, 0x6d, 0xaa, 0xa2, 0xda, 0x6e, 0x06, 0xab, 0xf5, 0xb2, 0x5a,
	0xca, 0xab, 0xdb, 0x4d, 0xb9, 0x8e, 0x8b, 0x57, 0xc5, 0xeb, 0x97, 0xe5, 0xbd, 0x37, 0x27, 0xfc,
	0xd4, 0xef, 0xa9, 0xac, 0x86, 0xe4, 0x39, 0xbf, 0xe3, 0xa7, 0x10, 0x14, 0x02, 0x65, 0xa8, 0x30,
	0xcf, 0x68, 0x6e, 0x31, 0x31, 0x41, 0xcd, 0x0f, 0x67, 0xe7, 0x1d, 0x88, 0x2b, 0xf2, 0x8c, 0xdf,
	0x6e, 0x03, 0x95, 0xf8, 0xc8, 0xe4, 0x80, 0xdf, 0x6d, 0xe3, 0x00, 0x0c, 0xa9, 0xdc, 0x58, 0x14,
	0x9f, 0x98, 0x7c, 0xc8, 0xfb, 0xad, 0x03, 0x1c, 0x2b, 0x9f, 0x99, 0x1c, 0xf2, 0x5e, 0x8b, 0x52,
	0xa3, 0x34, 0x55, 0x59, 0x06, 0x46, 0x7c, 0x61, 0xf2, 0x3e, 0xbf, 0x68, 0x33, 0x76, 0x82, 0x01,
	0xb7, 0x10, 0x5f, 0x99, 0xec, 0xf1, 0xb3, 0x16, 0x3c, 0x03, 0x67, 0xac, 0x1b, 0x8b, 0x6f, 0x1d,
	0x61, 0x24, 0x3f, 0x11, 0xdf, 0xbb, 0x0c, 0x52, 0xc3, 0x23, 0x65, 0x53, 0xf1, 0xa3, 0x4b, 0x99,
	0x1e, 0x13, 0x08, 0x7b, 0xfe, 0x67, 0x97, 0x66, 0x0c, 0xa4, 0x6a, 0x01, 0xa6, 0x0e, 0x20, 0x7e,
	0x31, 0xf9, 0x98, 0x3f, 0x68, 0x18, 0x33, 0x1b, 0x30, 0x57, 0x29, 0x69, 0x6f, 0x1d, 0x05, 0xd0,
	0x89, 0x0a, 0x63, 0x20, 0xed, 0xdd, 0xc8, 0x86, 0x67, 0xbb, 0xcc, 0xbf, 0x99, 0xec, 0xf3, 0xf3,
	0x4e, 0x96, 0x9f, 0x88, 0x3f, 0x4c, 0x3e, 0xe1, 0xc3, 0x06, 0xad, 0x53, 0x9f, 0x1b, 0x8a, 0xbd,
	0xcb, 0x33, 0x42, 0x8f, 0x2a, 0x25, 0xa5, 0xb5, 0xcf, 0x1d, 0x92, 0x75, 0x33, 0x95, 0x5a, 0x23,
	0xfe, 0x32, 0x79, 0x93, 0x5f, 0x6f, 0x68, 0x87, 0xcb, 0xb7, 0x91, 0xbc, 0xc5, 0x6f, 0x34, 0xdf,
	0x0c, 0x60, 0x2c, 0x82, 0x11, 0xef, 0x22, 0x79, 0xf1, 0xdf, 0xaf, 0x8e, 0x15, 0xea, 0x84, 0xc0,
	0x61, 0x58, 0x10, 0x7a, 0xd2, 0x09, 0xe8, 0x89, 0x78, 0x1f, 0x5d, 0x92, 0xe4, 0x98, 0xac, 0xb1,
	0x5d, 0x67, 0x80, 0x20, 0x3e, 0x44, 0x71, 0xf4, 0xfc, 0x74, 0xf0, 0xf4, 0x68, 0xa1, 0x5e, 0x9c,
	0xd4, 0x4b, 0xf6, 0xe8, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x64, 0xd0, 0x98, 0x20, 0x7c, 0x03,
	0x00, 0x00,
}
